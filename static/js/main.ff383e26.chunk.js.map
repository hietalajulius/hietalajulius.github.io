{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["document","title","console","log","getElementById","href","App","React","useState","value","setValue","color","setColor","icon","setIcon","Main","size","background","fill","align","height","min","max","pad","Stack","anchor","RangeInput","onChange","event","replace","target","Heading","className","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Grommet","StrictMode"],"mappings":"2OAGAA,SAASC,MAAQ,iBAEjBC,QAAQC,IAAI,QAASH,SAASI,eAAe,WAAWC,MA2DzCC,MAzDf,WAAgB,IAAD,EACaC,IAAMC,SAAS,KAD5B,mBACNC,EADM,KACCC,EADD,OAEaH,IAAMC,SAAS,uBAF5B,mBAENG,EAFM,KAECC,EAFD,OAGWL,IAAMC,SAAS,QAH1B,mBAGNK,EAHM,KAGAC,EAHA,KA6Bb,OACE,eAACC,EAAA,EAAD,CACEC,KAAK,QACLC,WAAYN,EACZO,KAAK,WACLC,MAAM,SACNC,OAAQ,CAAEC,IAAK,SAAUC,IAAK,UAC9BC,IAAI,QANN,UAQE,cAACC,EAAA,EAAD,CAAOC,OAAO,YAAd,SACE,cAACC,EAAA,EAAD,CACEjB,MAAOA,EACPkB,SAAU,SAACC,GAAD,OApCD,SAACA,GAEhB,GADAlB,EAASkB,GACLA,EAAQ,GAAI,CACdhB,EAAS,uBAETE,EAAQ,QACR,IAAMT,EAAOL,SAASI,eAAe,WAAWC,KAChDL,SAASI,eAAe,WAAWC,KAAOA,EAAKwB,QAC7C,YACA,QAEF3B,QAAQC,IAAI,MAAOU,OACd,CACLD,EAAS,oBAETE,EAAQ,aACR,IAAMT,EAAOL,SAASI,eAAe,WAAWC,KAChDL,SAASI,eAAe,WAAWC,KAAOA,EAAKwB,QAC7C,OACA,aAEF3B,QAAQC,IAAI,MAAOU,IAeMc,CAASC,EAAME,OAAOrB,YAG/C,cAACsB,EAAA,EAAD,+BACA,mBACEC,UAAU,WACV3B,KAAK,mCACLyB,OAAO,SACPG,IAAI,sBAJN,wBCxCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAACC,EAAA,EAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJ9C,SAASI,eAAe,SAM1B8B,M","file":"static/js/main.ff383e26.chunk.js","sourcesContent":["import { RangeInput, Stack, Main, Heading } from \"grommet\";\nimport React from \"react\";\n\ndocument.title = \"Julius Hietala\";\n//document.getElementById(\"favicon\").href = \"https://www.google.com/favicon.ico\";\nconsole.log(\"Favvi\", document.getElementById(\"favicon\").href);\n\nfunction App() {\n  const [value, setValue] = React.useState(100);\n  const [color, setColor] = React.useState(\"rgba(27, 33, 56, 1)\");\n  const [icon, setIcon] = React.useState(\"moon\");\n\n  const onChange = (event) => {\n    setValue(event);\n    if (event > 50) {\n      setColor(\"rgba(27, 33, 56, 1)\");\n\n      setIcon(\"moon\");\n      const href = document.getElementById(\"favicon\").href;\n      document.getElementById(\"favicon\").href = href.replace(\n        \"portfolio\",\n        \"moon\"\n      );\n      console.log(\"ico\", icon);\n    } else {\n      setColor(\"rgba(1, 1, 1, 0)\");\n\n      setIcon(\"portfolio\");\n      const href = document.getElementById(\"favicon\").href;\n      document.getElementById(\"favicon\").href = href.replace(\n        \"moon\",\n        \"portfolio\"\n      );\n      console.log(\"ico\", icon);\n    }\n  };\n  return (\n    <Main\n      size=\"cover\"\n      background={color}\n      fill=\"vertical\"\n      align=\"center\"\n      height={{ min: \"1000px\", max: \"1500px\" }}\n      pad=\"large\"\n    >\n      <Stack anchor=\"top-right\">\n        <RangeInput\n          value={value}\n          onChange={(event) => onChange(event.target.value)}\n        />\n      </Stack>\n      <Heading>Julius Hietala _</Heading>\n      <a\n        className=\"App-link\"\n        href=\"https://github.com/hietalajulius\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Github\n      </a>\n    </Main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Grommet } from \"grommet\";\n\nReactDOM.render(\n  <Grommet>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Grommet>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}