{"version":3,"sources":["App.tsx","index.tsx"],"names":["document","title","App","React","useState","darkMode","setDarkMode","Main","background","fill","align","height","min","max","pad","Grid","rows","columns","gap","areas","name","start","end","Box","gridArea","Header","checked","icons","unchecked","Star","color","size","Actions","onChange","href","getElementById","replace","Button","primary","label","Heading","alignSelf","level","customTheme","deepFreeze","global","colors","brand","ReactDOM","render","Grommet","theme","StrictMode"],"mappings":"gYAiBAA,SAASC,MAAQ,iBAEjB,IAkGeC,EA/EH,WAAO,IAAD,EACgBC,IAAMC,UAAS,GAD/B,mBACTC,EADS,KACCC,EADD,KAkBhB,OACE,mCACE,cAACC,EAAA,EAAD,CACEC,WAAYH,EAAW,QAAU,UACjCI,KAAK,WACLC,MAAM,SACNC,OAAQ,CAAEC,IAAK,SAAUC,IAAK,UAC9BC,IAAI,QALN,SAOE,eAACC,EAAA,EAAD,CACEC,KAAM,CAAC,WAAY,QAAS,QAAS,QAAS,SAC9CC,QAAS,CAAC,SACVC,IAAI,QACJC,MAAO,CACL,CAAEC,KAAM,SAAUC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAC1C,CAAEF,KAAM,QAASC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACzC,CAAEF,KAAM,QAASC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACzC,CAAEF,KAAM,QAASC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACzC,CAAEF,KAAM,QAASC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,KAT7C,UAYE,cAACC,EAAA,EAAD,CAAKC,SAAS,SAAd,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CACEC,QAASrB,EACTsB,MAAO,CACLC,UAAW,cAACC,EAAA,EAAD,CAAMC,MAAO,SAAUC,KAAM,UACxCL,QAAS,cAACM,EAAA,EAAD,CAASF,MAAM,QAAQC,KAAM,WAExCE,SA5CG,WACf3B,GAAaD,GACb,IAAM6B,EAAQlC,SAASmC,eAAe,WAAmBD,KAEtDlC,SAASmC,eAAe,WAAmBD,KAD1C7B,EACiD6B,EAAKE,QACtD,OACA,OAGiDF,EAAKE,QACtD,MACA,WAmCM,cAACC,EAAA,EAAD,CACEC,SAAO,EACPC,MAAM,SACNL,KAAM,0CAIZ,eAACX,EAAA,EAAD,CAAKC,SAAS,QAAd,UACE,cAACgB,EAAA,EAAD,CAASC,UAAW,QAASC,MAAO,EAApC,SACG,mBAEH,cAACF,EAAA,EAAD,CAASC,UAAW,QAASC,MAAO,EAApC,SACG,0CAGL,cAACnB,EAAA,EAAD,CAAKC,SAAS,QAAQhB,WAAW,QAAjC,oBAGA,cAACe,EAAA,EAAD,CAAKC,SAAS,QAAQhB,WAAW,QAAjC,oBAGA,cAACe,EAAA,EAAD,CAAKC,SAAS,QAAQhB,WAAW,QAAjC,4B,gBCrGGmC,EAAcC,qBAAW,CACpCC,OAAQ,CACNC,OAAQ,CACNC,MAAO,UACP,WAAY,cAMlBC,IAASC,OACP,cAACC,EAAA,EAAD,CAASC,MAAOR,EAAhB,SACE,cAAC,IAAMS,WAAP,UACE,cAAC,EAAD,QAGJpD,SAASmC,eAAe,W","file":"static/js/main.592190ef.chunk.js","sourcesContent":["import {\n  Main,\n  Heading,\n  Grid,\n  Box,\n  Header,\n  Button,\n  Card,\n  CardFooter,\n  CardBody,\n  CardHeader,\n} from \"grommet\";\nimport React from \"react\";\nimport Toggle from \"react-toggle\";\nimport { Actions, Star } from \"grommet-icons\";\nimport \"./App.css\";\n\ndocument.title = \"Julius Hietala\";\n\nconst Project = () => {\n  return (\n    <Card height=\"small\" width=\"large\" background=\"light-1\">\n      <CardHeader pad=\"medium\">Header</CardHeader>\n      <CardBody pad=\"medium\">Body</CardBody>\n      <CardFooter pad={{ horizontal: \"small\" }} background=\"light-2\">\n        <Button\n          icon={<Star color={\"yellow\"} size={\"small\"} />}\n          hoverIndicator\n        />\n        <Button\n          icon={<Star color={\"yellow\"} size={\"small\"} />}\n          hoverIndicator\n        />\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst App = () => {\n  const [darkMode, setDarkMode] = React.useState(false);\n\n  const onToggle = () => {\n    setDarkMode(!darkMode);\n    const href = (document.getElementById(\"favicon\") as any).href;\n    if (darkMode) {\n      (document.getElementById(\"favicon\") as any).href = href.replace(\n        \"moon\",\n        \"sun\"\n      );\n    } else {\n      (document.getElementById(\"favicon\") as any).href = href.replace(\n        \"sun\",\n        \"moon\"\n      );\n    }\n  };\n  return (\n    <>\n      <Main\n        background={darkMode ? \"black\" : \"light-1\"}\n        fill=\"vertical\"\n        align=\"center\"\n        height={{ min: \"1000px\", max: \"1500px\" }}\n        pad=\"small\"\n      >\n        <Grid\n          rows={[\"xxxsmall\", \"small\", \"small\", \"small\", \"small\"]}\n          columns={[\"large\"]}\n          gap=\"small\"\n          areas={[\n            { name: \"header\", start: [0, 0], end: [0, 0] },\n            { name: \"title\", start: [0, 1], end: [0, 1] },\n            { name: \"proj1\", start: [0, 2], end: [0, 2] },\n            { name: \"proj2\", start: [0, 3], end: [0, 3] },\n            { name: \"proj3\", start: [0, 4], end: [0, 4] },\n          ]}\n        >\n          <Box gridArea=\"header\">\n            <Header>\n              <Toggle\n                checked={darkMode}\n                icons={{\n                  unchecked: <Star color={\"yellow\"} size={\"small\"} />,\n                  checked: <Actions color=\"black\" size={\"small\"} />,\n                }}\n                onChange={onToggle}\n              />\n              <Button\n                primary\n                label=\"Github\"\n                href={\"https://github.com/hietalajulius\"}\n              />\n            </Header>\n          </Box>\n          <Box gridArea=\"title\">\n            <Heading alignSelf={\"start\"} level={1}>\n              {\"julius hietala\"}\n            </Heading>\n            <Heading alignSelf={\"start\"} level={2}>\n              {\"things i've been working on lately\"}\n            </Heading>\n          </Box>\n          <Box gridArea=\"proj1\" background=\"brand\">\n            Proj 1\n          </Box>\n          <Box gridArea=\"proj2\" background=\"brand\">\n            Proj 2\n          </Box>\n          <Box gridArea=\"proj3\" background=\"brand\">\n            Proj 3\n          </Box>\n        </Grid>\n      </Main>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Grommet } from \"grommet\";\nimport { deepFreeze } from \"grommet/utils\";\n\nexport const customTheme = deepFreeze({\n  global: {\n    colors: {\n      brand: \"#00873D\",\n      \"accent-1\": \"#FFFFFF\",\n    },\n  },\n});\n  \n\nReactDOM.render(\n  <Grommet theme={customTheme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Grommet>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}